version: '1.0'
networks:
 kong-net:
  name: kong-net
  driver: bridge
  external: true
  ipam:
    config:
      - subnet: 172.1.1.0/24

services:
  # mysql:
  #   image: mysql:5.7.42
  #   container_name: mysql
  #   ports:
  #     - "3306:3306"
  #   environment:
  #     - MYSQL_DATABASE=keycloak
  #     - MYSQL_USER=keycloak
  #     - MYSQL_PASSWORD=password
  #     - MYSQL_ROOT_PASSWORD=root_password
  #   healthcheck:
  #     test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.2
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      # - KC_DB=mysql
      # - KC_DB_URL_HOST=mysql
      # - KC_DB_URL_DATABASE=keycloak
      # - KC_DB_USERNAME=keycloak
      # - KC_DB_PASSWORD=password
      - KC_HEALTH_ENABLED=true
    ports:
      - "9080:8080"
    command: start-dev
    # depends_on:
    #   - mysql
    healthcheck:
      test: "curl -f http://localhost:8080/health/ready || exit 1"
     
  openldap:
    image: osixia/openldap:1.5.0
    container_name: openldap
    environment:
      - LDAP_ORGANISATION="MyCompany Inc."
      - LDAP_DOMAIN=mycompany.com
    ports:
      - "389:389"

  phpldapadmin:
    image: osixia/phpldapadmin:0.9.0
    container_name: phpldapadmin
    environment:
      - PHPLDAPADMIN_LDAP_HOSTS=openldap
    ports:
      - "6443:443"
    depends_on:
      - openldap
  
  #######################################
  # Konga database prepare
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    container_name: kong-database
    image: postgres:11-alpine
    restart: unless-stopped
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 3s
      retries: 5

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    container_name: kong-migration
    image: kong:2.1.4-alpine
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    container_name: kong
    image: kong:2.1.4-alpine
    restart: unless-stopped
    networks:
      kong-net:
        ipv4_address: 172.1.1.40
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_DB_UPDATE_FREQUENCY: 1m
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    depends_on:
      - kong-migration
    ports:
      - "8001:8001"
      - "8444:8444"
      - "80:8000"
      - "443:8443"


  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    container_name: konga-prepare
    image: pantsel/konga:0.14.9
    command: "-c prepare -a postgres -u postgresql://kong:password@kong-database:5432/konga_db"
    networks:
      - kong-net
    restart: on-failure
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    container_name: konga
    image: pantsel/konga:0.14.9
    restart: unless-stopped
    networks:
      - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: password
      DB_DATABASE: konga_db
      # any string will OK for token
      TOKEN_SECRET: iu7YDcPLiZkozQXzZ9kka3Ee1Vid5ZgQ
      NODE_ENV: development
    depends_on:
      - konga-prepare
    ports:
      - "1337:1337"